#!/bin/bash

vidhop_dir="$HOME/Videos/VidHop"
vidhop_app_dir="/opt/vidhop"
#vidhop_app_dir="$(dirname "$(dirname "$(realpath "$0")")")"
bin_dir="$vidhop_app_dir/bin"

# overwrites $vidhop_dir, $vidhop_app_dir and $bin_dir with values from config.ini (if needed).
[ -f "$vidhop_app_dir/config.ini" ] && . "$vidhop_app_dir/config.ini"

. "$bin_dir/vars" # Will overwrite all vars from config.ini
. "$bin_dir/config"
. "$bin_dir/common"
. "$bin_dir/logger"
. "$bin_dir/history"
. "$bin_dir/files"
. "$bin_dir/metadata"

. "$bin_dir/dlv"
. "$bin_dir/fvid"
. "$bin_dir/batch"
. "$bin_dir/sync" # from workstation to phone
. "$bin_dir/ffmpeg"
. "$bin_dir/debug"

[ -f "$vidhop_app_dir/config.ini" ] && . "$vidhop_app_dir/config.ini" # overwrites sync vars with values from config.ini

function update_python_packages() {
  echo "> Updating Python packages..." && sleep 1
  pkg install python
  pip install -U pip
  pip install -U wheel
  pip install -U yt-dlp
  pip install -U requests
  pip install -U selenium
  pip install -U beautifulsoup4
  pip install -U image
  pip install -U pillow
  pip install -U facebook-scraper
  pip install -U snscrape
  pip install -U pywebcopy
}

function install_loader() {
  loader_bin="/usr/local/bin/vidhop"
  loader_tmp="loader_tmp"
  echo "> Installing VidHop loader to $loader_bin..." && sleep 1
  cd "$HOME" # make sure we have write permissions
  echo '#!/bin/bash' >"$loader_tmp"
  echo >>"$loader_tmp"
  echo ". $bin_dir/loader" >>"$loader_tmp"
  sudo mv "$loader_tmp" "$loader_bin"
  sudo chmod +x "$loader_bin"
  . vidhop
}

function installloader() { # alias for phone hand typing
  install_loader
}

function fetch_github() {
  echo "> Updating VidHop code at $vidhop_app_dir..."
  echo "> Fetching from GitHub..." && sleep 1
  cd "$vidhop_app_dir"
  git fetch --all
  git reset --hard origin/master && sleep 1
  . "$bin_dir/loader"
}

function updatevidhop() {
  pwd=$(pwd) && cd "$vidhop_app_dir"
  fetch_github
  update_python_packages
  install_loader
  echo -e "\n${GREEN}VidHop updated ! ${NC}\n\nReload VidHop by choosing one of these two options:"
  echo -e "  1. Close Termux and reopen Termux.\n  2. Execute '. vidhop'"
  cd "$pwd"
}

function uninstallvidhop() {
  echo "This is the uninstallation program for VidHop."
  echo "Uninstall removes all program files."
  echo "It does not delete your downloads in the VidHop directory."
  echo -n 'Are you sure you want to uninstall VidHop? y/N: ' && read -r answer
  answer=$(echo "$answer" | tr '[:upper:]' '[:lower:]')
  [ "$answer" = "n" ] || [ -z "$answer" ] && echo "aborted uninstall" && return
  [ "$answer" = "y" ] &&
    sudo rm "/usr/local/bin/vidhop" &&
    rm -rf "/opt/vidhop"
}

function loader_help() {
  echo " Title: loader"
  echo " Description: VidHop management functions."
  echo " Commands:"
  echo "    updatevidhop    => default update"
  echo "    uninstallvidhop => remove all VidHop executables, downloaded data in the VidHop directory will NOT be deleted"
  echo "    installloader   => alias for install_loader"
  echo "    install_loader  => enables users to reload with '. vidhop"
  echo "    fetch_github    => download the newest VidHop code from GitHub"
  echo "    update_python_packages => updates Python packages with pip (package manager)"
}

function vidhophelp() {
  dlv_help && echo
  fvid_help && echo
  files_help && echo
  metadata_help && echo
  history_help && echo
  sync_help && echo
  loader_help && return
}

function install_odysee_workaround() {
  sed 's;https://api.lbry.tv/api/v1/proxy;https://api.na-backend.odysee.com/api/v1/proxy;' \
    "/home/$USER/.local/lib/python3.10/site-packages/yt_dlp/extractor/lbry.py" \
    > "/home/$USER/.local/lib/python3.10/site-packages/yt_dlp/extractor/lbry.py.temp"

  cat "/home/$USER/.local/lib/python3.10/site-packages/yt_dlp/extractor/lbry.py.temp" \
    > "/home/$USER/.local/lib/python3.10/site-packages/yt_dlp/extractor/lbry.py"

  rm "/home/$USER/.local/lib/python3.10/site-packages/yt_dlp/extractor/lbry.py.temp"
  echo "Odysee 405 HTTP error fixed"
}

function restore_odysee_workaround() {
  sed 's;https://api.na-backend.odysee.com/api/v1/proxy;https://api.lbry.tv/api/v1/proxy;' \
    "/home/$USER/.local/lib/python3.10/site-packages/yt_dlp/extractor/lbry.py" \
    > "/home/$USER/.local/lib/python3.10/site-packages/yt_dlp/extractor/lbry.py.temp"

  cat "/home/$USER/.local/lib/python3.10/site-packages/yt_dlp/extractor/lbry.py.temp" \
    > "/home/$USER/.local/lib/python3.10/site-packages/yt_dlp/extractor/lbry.py"

  rm "/home/$USER/.local/lib/python3.10/site-packages/yt_dlp/extractor/lbry.py.temp"
  echo "Odysee 405 HTTP error fix reverted"
}
